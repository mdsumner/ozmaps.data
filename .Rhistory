usethis::use_data_raw()
usethis::create_package("../ozmaps.rdata")
# #Volume 1 – Main Structure and Greater Capital City Statistical Areas
#
# http://www.abs.gov.au/AUSSTATS/abs@.nsf/DetailsPage/1270.0.55.001July%202016?OpenDocument
#
# #Volume 2 – Indigenous Structure
#
# http://www.abs.gov.au/AUSSTATS/abs@.nsf/DetailsPage/1270.0.55.002July%202016?OpenDocument
#
# Volume 3 – Non ABS Structures
#
# http://www.abs.gov.au/AUSSTATS/abs@.nsf/DetailsPage/1270.0.55.003July%202018?OpenDocument
#
# Volume 4 – Significant Urban Areas, Urban Centres and Localities, Section of State
#
# http://www.abs.gov.au/AUSSTATS/abs@.nsf/DetailsPage/1270.0.55.004July%202016?OpenDocument
#
# Volume 5 – Remoteness Structure   (this has GPKG)
#
# http://www.abs.gov.au/AUSSTATS/abs@.nsf/DetailsPage/1270.0.55.005July%202016?OpenDocument
#
# Census of Population and Housing Destination Zones
#
# http://www.abs.gov.au/AUSSTATS/abs@.nsf/DetailsPage/8000.0August%202016?OpenDocument
urls <-
c("http://www.abs.gov.au/AUSSTATS/abs@.nsf/DetailsPage/1270.0.55.001July%202016?OpenDocument",
"http://www.abs.gov.au/AUSSTATS/abs@.nsf/DetailsPage/1270.0.55.002July%202016?OpenDocument",
"http://www.abs.gov.au/AUSSTATS/abs@.nsf/DetailsPage/1270.0.55.003July%202018?OpenDocument",
"http://www.abs.gov.au/AUSSTATS/abs@.nsf/DetailsPage/1270.0.55.004July%202016?OpenDocument",
"http://www.abs.gov.au/AUSSTATS/abs@.nsf/DetailsPage/1270.0.55.005July%202016?OpenDocument",
"http://www.abs.gov.au/AUSSTATS/abs@.nsf/DetailsPage/8000.0August%202016?OpenDocument"
)
txl <- lapply(urls, readLines)
txl
lapply(txl, function(a) grep("midmif.zip", a))
lapply(txl, function(a) grep("geopackage.zip", a))
lapply(txl, function(a) grep("tab.zip", a))
tx <- unlist(lapply(urls, readLines))
srcs <- grep("midmif.zip", tx, value = TRUE)
srcs
strsplit(srcs, "href=\"/")
unlist(lapply(strsplit(srcs, "href=\"/"), function(x) x[1]))
unlist(lapply(strsplit(srcs, "href=\"/"), function(x) x[2]))
strsplit(unlist(lapply(strsplit(srcs, "href=\"/"), function(x) x[2])), "\"><img src=")
unlist(lapply(strsplit(unlist(lapply(strsplit(srcs, "href=\"/"), function(x) x[2])), "\"><img src="), function(a) a[1])
)
src <- file.path("http://www.abs.gov.au", unlist(lapply(strsplit(unlist(lapply(strsplit(srcs, "href=\"/"), function(x) x[2])), "\"><img src="), function(a) a[1])))
src
lapply(strsplit(src, "&"), function(a) a[2])
bname <- unlist(lapply(strsplit(src, "&"), function(a) a[2]))
src <- file.path("http://www.abs.gov.au", unlist(lapply(strsplit(unlist(lapply(strsplit(srcs, "href=\"/"), function(x) x[2])), "\"><img src="), function(a) a[1])))
bname <- unlist(lapply(strsplit(src, "&"), function(a) a[2]))
curl::curl_download(src, file.path("extdata/abs", bname))
curl::curl_download(src[1], file.path("extdata/abs", bname[1]))
file.path("extdata/abs", bname[1])
src[1]
src <- gsub(" ", "%20", src)
src <- file.path("http://www.abs.gov.au", unlist(lapply(strsplit(unlist(lapply(strsplit(srcs, "href=\"/"), function(x) x[2])), "\"><img src="), function(a) a[1])))
bname <- unlist(lapply(strsplit(src, "&"), function(a) a[2]))
curl::curl_download(src, file.path("extdata/abs", bname))
src[1]
gsub(" ", "%20", src)[1]
src <- file.path("http://www.abs.gov.au", unlist(lapply(strsplit(unlist(lapply(strsplit(srcs, "href=\"/"), function(x) x[2])), "\"><img src="), function(a) a[1])))
src <- gsub(" ", "%20", src)
bname <- unlist(lapply(strsplit(src, "&"), function(a) a[2]))
curl::curl_download(src[1], file.path("extdata/abs", bname[1]))
for (i in seq_along(src)) {
aname <- file.path("extdata/abs", bname[i])
if (!file.exists(aname)) {
curl::curl_download(src[i], aname)
}
}
unlink("abs.tar.gz")
system("tar cvzf abs.tar.gz extdata/abs")
files <- list.files("extdata/abs", recursive = TRUE, pattern = "grb$")
writeLines(files, "abslist.txt")
library(piggyback)
pb_upload("abs.tar.gz", tag = "v0.0.1")
pb_upload("abs.tar.gz", tag = "v0.0.1")
files <- list.files("extdata/abs", recursive = TRUE)
writeLines(files, "abslist.txt")
for (i in seq_along(src)) {
aname <- file.path("extdata/abs", bname[i])
unzip(aname, exdir = "extdata/abs-mif")
}
files <- list.files("extdata/abs-mif", pattern = "mif$")
files <- list.files("extdata/abs-mif", pattern = "mif$")
for (i in seq_along(files)) {
print(tibble::as_tibble(vapour::vapour_read_attributes(files[i], limit_n = 1)))
}
files[i]
files <- list.files("extdata/abs-mif", pattern = "mif$", full.names = TRUE)
for (i in seq_along(files)) {
print(tibble::as_tibble(vapour::vapour_read_attributes(files[i], limit_n = 1)))
}
files
grep("TAS", files)
grep("TAS", files, value = TRUE)
grep("MB", files, value = TRUE)
read_all <- function(x) {
do.call(rbind, lapply(x, sf::read_sf))
}
x <- read_all(grep("MB", files, value = TRUE))
dim(x)
tx
grep("lga", tx)
grep("lga", tx, value = TRUE)
x <- read_all(grep("dzn", files, value = TRUE))
dim9x
dim(x)
library(sf)
class(x)
grep("dzn", files, value = TRUE)
x <- read_all(grep("DZN", files, value = TRUE))
dim(x)
plot(x[1, 1])
plot(x[, 1])
x <- read_all(grep("LGA", files, value = TRUE))
dim(x)
names(x)
plot(x[, 2])
library(raster)
e <- drawExtent()
plot(e)
plot(x[, 2], add = T)
e
ozmaps::ozmap()
devtools::install_github("mdsumner/ozmaps")
ozmaps::ozmap()
e <- drawExtent()
plot(e)
plot(x[, 2], add = T)
st_crop(x, e)
y <- st_crop(x, e)
plot(y[,2])
pryr::object_size(x)
saveRDS(x, "file.rds", compress = "bzip2")
library(silicate)
sc <- silicate:::SC0(x)
sc <- silicate:::SC0(st_cast(x, "MULTIPOLYGON"))
x <- st_cast(x, "MULTIPOLYGON")
x
sc <- silicate:::SC(st_cast(x, "MULTIPOLYGON"))
saveRDS(st_cast(x, "MULTIPOLYGON"), "file.rds", compress = "bzip2")
##  https://github.com/mdsumner/ozmaps/issues/5#issuecomment-427731457
# #Volume 1 – Main Structure and Greater Capital City Statistical Areas
#
# http://www.abs.gov.au/AUSSTATS/abs@.nsf/DetailsPage/1270.0.55.001July%202016?OpenDocument
#
# #Volume 2 – Indigenous Structure
#
# http://www.abs.gov.au/AUSSTATS/abs@.nsf/DetailsPage/1270.0.55.002July%202016?OpenDocument
#
# Volume 3 – Non ABS Structures
#
# http://www.abs.gov.au/AUSSTATS/abs@.nsf/DetailsPage/1270.0.55.003July%202018?OpenDocument
#
# Volume 4 – Significant Urban Areas, Urban Centres and Localities, Section of State
#
# http://www.abs.gov.au/AUSSTATS/abs@.nsf/DetailsPage/1270.0.55.004July%202016?OpenDocument
#
# Volume 5 – Remoteness Structure   (this has GPKG)
#
# http://www.abs.gov.au/AUSSTATS/abs@.nsf/DetailsPage/1270.0.55.005July%202016?OpenDocument
#
# Census of Population and Housing Destination Zones
#
# http://www.abs.gov.au/AUSSTATS/abs@.nsf/DetailsPage/8000.0August%202016?OpenDocument
urls <-
c("http://www.abs.gov.au/AUSSTATS/abs@.nsf/DetailsPage/1270.0.55.001July%202016?OpenDocument",
"http://www.abs.gov.au/AUSSTATS/abs@.nsf/DetailsPage/1270.0.55.002July%202016?OpenDocument",
"http://www.abs.gov.au/AUSSTATS/abs@.nsf/DetailsPage/1270.0.55.003July%202018?OpenDocument",
"http://www.abs.gov.au/AUSSTATS/abs@.nsf/DetailsPage/1270.0.55.004July%202016?OpenDocument",
"http://www.abs.gov.au/AUSSTATS/abs@.nsf/DetailsPage/1270.0.55.005July%202016?OpenDocument",
"http://www.abs.gov.au/AUSSTATS/abs@.nsf/DetailsPage/8000.0August%202016?OpenDocument"
)
tx <- unlist(lapply(urls, readLines))
## TAB
srcs <- grep("tab.zip", tx, value = TRUE)
src <- file.path("http://www.abs.gov.au", unlist(lapply(strsplit(unlist(lapply(strsplit(srcs, "href=\"/"), function(x) x[2])), "\"><img src="), function(a) a[1])))
src <- gsub(" ", "%20", src)
bname <- unlist(lapply(strsplit(src, "&"), function(a) a[2]))
for (i in seq_along(src)) {
aname <- file.path("extdata/abs", bname[i])
if (!file.exists(aname)) {
curl::curl_download(src[i], aname)
}
}
for (i in seq_along(src)) {
aname <- file.path("extdata/abs", bname[i])
unzip(aname, exdir = "extdata/abs-tab")
}
files <- list.files("extdata/abs-tab", pattern = "mif$", full.names = TRUE)
for (i in seq_along(files)) {
print(tibble::as_tibble(vapour::vapour_read_attributes(files[i], limit_n = 1)))
}
files <- list.files("extdata/abs-tab", pattern = "tab$", full.names = TRUE)
for (i in seq_along(files)) {
print(tibble::as_tibble(vapour::vapour_read_attributes(files[i], limit_n = 1)))
}
read_all <- function(x) {
do.call(rbind, lapply(x, sf::read_sf))
}
x <- read_all(grep("LGA", files, value = TRUE))
library(sf)
dim9x
dim(x)
x[545]
x[545, ]
## SHP
srcs <- grep("shp.zip", tx, value = TRUE)
src <- file.path("http://www.abs.gov.au", unlist(lapply(strsplit(unlist(lapply(strsplit(srcs, "href=\"/"), function(x) x[2])), "\"><img src="), function(a) a[1])))
src <- gsub(" ", "%20", src)
bname <- unlist(lapply(strsplit(src, "&"), function(a) a[2]))
for (i in seq_along(src)) {
aname <- file.path("extdata/abs", bname[i])
if (!file.exists(aname)) {
curl::curl_download(src[i], aname)
}
}
for (i in seq_along(src)) {
aname <- file.path("extdata/abs", bname[i])
unzip(aname, exdir = "extdata/abs-shp")
}
files <- list.files("extdata/abs-shp", pattern = "tab$", full.names = TRUE)
for (i in seq_along(files)) {
print(tibble::as_tibble(vapour::vapour_read_attributes(files[i], limit_n = 1)))
}
files <- list.files("extdata/abs-shp", pattern = "shp$", full.names = TRUE)
for (i in seq_along(files)) {
print(tibble::as_tibble(vapour::vapour_read_attributes(files[i], limit_n = 1)))
}
## abs-mif
files <- list.files("extdata/abs-shp", pattern = "shp$", full.names = TRUE)
for (i in seq_along(files)) {
print(tibble::as_tibble(vapour::vapour_read_attributes(files[i], limit_n = 1)))
}
read_all <- function(x) {
do.call(rbind, lapply(x, sf::read_sf))
}
x <- read_all(grep("LGA", files, value = TRUE))
dim(x)
x[545, ]
src
grep("shp", tx, value = TRUE)
## abs-mif
files <- list.files("extdata/abs-tab", pattern = "tab$", full.names = TRUE)
for (i in seq_along(files)) {
print(tibble::as_tibble(vapour::vapour_read_attributes(files[i], limit_n = 1)))
}
read_all <- function(x) {
do.call(rbind, lapply(x, sf::read_sf))
}
x <- read_all(grep("GCCSA", files, value = TRUE))
dim(x)
names(x)
plot(x[2])
x$GCCSA_NAME_2016
plot(x[2] %>% filter(STATE_NAME_2016 = "Tasmania"))
library(dplyr)
plot(x[2] %>% filter(STATE_NAME_2016 == "Tasmania"))
plot(x %>% filter(STATE_NAME_2016 == "Tasmania") )
## GPKG
srcs <- grep("geopackage.zip", tx, value = TRUE)
srcs
src <- file.path("http://www.abs.gov.au", unlist(lapply(strsplit(unlist(lapply(strsplit(srcs, "href=\"/"), function(x) x[2])), "\"><img src="), function(a) a[1])))
src <- gsub(" ", "%20", src)
src
bname <- unlist(lapply(strsplit(src, "&"), function(a) a[2]))
bname
## GPKG
srcs <- grep("geopackage.zip", tx, value = TRUE)
src <- file.path("http://www.abs.gov.au", unlist(lapply(strsplit(unlist(lapply(strsplit(srcs, "href=\"/"), function(x) x[2])), "\"><img src="), function(a) a[1])))
src <- gsub(" ", "%20", src)
bname <- unlist(lapply(strsplit(src, "&"), function(a) a[2]))
for (i in seq_along(src)) {
aname <- file.path("extdata/abs", bname[i])
if (!file.exists(aname)) {
curl::curl_download(src[i], aname)
}
}
## GPKG
srcs <- grep("geopackage.zip|gpkg.zip", tx, value = TRUE)
src <- file.path("http://www.abs.gov.au", unlist(lapply(strsplit(unlist(lapply(strsplit(srcs, "href=\"/"), function(x) x[2])), "\"><img src="), function(a) a[1])))
src <- gsub(" ", "%20", src)
bname <- unlist(lapply(strsplit(src, "&"), function(a) a[2]))
bname
## SHP
srcs <- grep("shp.zip|shape.zip", tx, value = TRUE)
src <- file.path("http://www.abs.gov.au", unlist(lapply(strsplit(unlist(lapply(strsplit(srcs, "href=\"/"), function(x) x[2])), "\"><img src="), function(a) a[1])))
src <- gsub(" ", "%20", src)
bname <- unlist(lapply(strsplit(src, "&"), function(a) a[2]))
bname
##  https://github.com/mdsumner/ozmaps/issues/5#issuecomment-427731457
# #Volume 1 – Main Structure and Greater Capital City Statistical Areas
#
# http://www.abs.gov.au/AUSSTATS/abs@.nsf/DetailsPage/1270.0.55.001July%202016?OpenDocument
#
# #Volume 2 – Indigenous Structure
#
# http://www.abs.gov.au/AUSSTATS/abs@.nsf/DetailsPage/1270.0.55.002July%202016?OpenDocument
#
# Volume 3 – Non ABS Structures
#
# http://www.abs.gov.au/AUSSTATS/abs@.nsf/DetailsPage/1270.0.55.003July%202018?OpenDocument
#
# Volume 4 – Significant Urban Areas, Urban Centres and Localities, Section of State
#
# http://www.abs.gov.au/AUSSTATS/abs@.nsf/DetailsPage/1270.0.55.004July%202016?OpenDocument
#
# Volume 5 – Remoteness Structure   (this has GPKG)
#
# http://www.abs.gov.au/AUSSTATS/abs@.nsf/DetailsPage/1270.0.55.005July%202016?OpenDocument
#
# Census of Population and Housing Destination Zones
#
# http://www.abs.gov.au/AUSSTATS/abs@.nsf/DetailsPage/8000.0August%202016?OpenDocument
urls <-
c("http://www.abs.gov.au/AUSSTATS/abs@.nsf/DetailsPage/1270.0.55.001July%202016?OpenDocument",
"http://www.abs.gov.au/AUSSTATS/abs@.nsf/DetailsPage/1270.0.55.002July%202016?OpenDocument",
"http://www.abs.gov.au/AUSSTATS/abs@.nsf/DetailsPage/1270.0.55.003July%202018?OpenDocument",
"http://www.abs.gov.au/AUSSTATS/abs@.nsf/DetailsPage/1270.0.55.004July%202016?OpenDocument",
"http://www.abs.gov.au/AUSSTATS/abs@.nsf/DetailsPage/1270.0.55.005July%202016?OpenDocument",
"http://www.abs.gov.au/AUSSTATS/abs@.nsf/DetailsPage/8000.0August%202016?OpenDocument"
)
tx <- unlist(lapply(urls, readLines))
## GPKG
srcs <- grep("geopackage.zip|gpkg.zip", tx, value = TRUE)
src <- file.path("http://www.abs.gov.au", unlist(lapply(strsplit(unlist(lapply(strsplit(srcs, "href=\"/"), function(x) x[2])), "\"><img src="), function(a) a[1])))
src <- gsub(" ", "%20", src)
bname <- unlist(lapply(strsplit(src, "&"), function(a) a[2]))
for (i in seq_along(src)) {
aname <- file.path("extdata/abs", bname[i])
if (!file.exists(aname)) {
curl::curl_download(src[i], aname)
}
}
for (i in seq_along(src)) {
aname <- file.path("extdata/abs", bname[i])
unzip(aname, exdir = "extdata/abs-gpkg")
}
## SHP
srcs <- grep("shp.zip|shape.zip", tx, value = TRUE)
src <- file.path("http://www.abs.gov.au", unlist(lapply(strsplit(unlist(lapply(strsplit(srcs, "href=\"/"), function(x) x[2])), "\"><img src="), function(a) a[1])))
src <- gsub(" ", "%20", src)
bname <- unlist(lapply(strsplit(src, "&"), function(a) a[2]))
for (i in seq_along(src)) {
aname <- file.path("extdata/abs", bname[i])
if (!file.exists(aname)) {
curl::curl_download(src[i], aname)
}
}
for (i in seq_along(src)) {
aname <- file.path("extdata/abs", bname[i])
unzip(aname, exdir = "extdata/abs-shp")
}
unlink("abs.tar.gz")
system("tar cvzf abs.tar.gz extdata/abs-gpkg")
writeLines(files, "abslist-gpkg.txt")
library(piggyback)
pb_upload("abs.tar.gz", tag = "v0.0.2")
unlink("abs-shp.tar.gz")
system("tar cvzf abs-shp.tar.gz extdata/abs-shp")
files <- list.files("extdata/abs-shp", recursive = TRUE)
writeLines(files, "abslist-shp.txt")
library(piggyback)
library(silicate)
plot(islandstate)
library(anglr)
plot(islandstate)
data("wrld_simpl", package = "maptools")
x <- sf::st_as_sf(wrld_simpl)
x$uid <- 1:nrow(x)
data("wrld_simpl", package = "maptools")
x <- sf::st_as_sf(wrld_simpl)
x$uid <- 1:nrow(x)
library(dplyr)
x %>% st_cast("POLYGON") %>% group_by(uid) %>% slice(1L)
xx %>% st_cast("POLYGON") %>% group_by(uid) %>% slice(1L)
xx <- x %>% st_cast("POLYGON") %>% group_by(uid) %>% slice(1L)
plot(xx)
nrow(xx)
plot(xx["NAME"])
?pb_upload
library(piggyback)
?pb_upload
unlink("abs-gpkg.tar.gz")
system("tar cvzf abs-gpkg.tar.gz extdata/abs-gpkg")
files <- list.files("extdata/abs-gpkg", recursive = TRUE)
writeLines(files, "abslist-gpkg.txt")
library(piggyback)
pb_upload("abs-gpkg.tar.gz", tag = "v0.0.3")
pb_delete("abs.tar.gz")
?pb_delete
pb_delete("abs.tar.gz", "mdsumner/ozmaps.data", tag = "v0.0.1")
pb_upload("abs-shp.tar.gz", tag = "v0.0.3")
pb_list()
?pb_list
